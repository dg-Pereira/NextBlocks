define("mod_nextblocks/lib",["exports"],(function(_exports){Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.runTests=_exports.replaceCode=_exports.parseTestsFile=_exports.injectInputBox=void 0;_exports.injectInputBox=function(i){var inputBox=document.createElement("input");inputBox.setAttribute("type","text"),inputBox.setAttribute("id","programInputBox"+i);var submitButton=document.createElement("button");submitButton.setAttribute("id","programInputButton"+i),submitButton.setAttribute("type","button"),submitButton.innerHTML="Submit",document.getElementById("blocklyDiv").insertAdjacentElement("afterend",inputBox),inputBox.insertAdjacentElement("afterend",submitButton)};_exports.replaceCode=function(code){document.getElementById("codeDiv").innerHTML=formatCodeHTML(code)};var formatCodeHTML=function(code){return"<pre>"+code+"</pre>"},parseTestsFile=function(fileString){try{var jsonReturn=[];return fileString.split("|").forEach((function(testCase){var thisTestCaseJson={inputs:[]},inputOutput=testCase.split("-"),inputs=inputOutput[0];thisTestCaseJson.output=inputOutput[1].trim(),inputs.split("_").forEach((function(input){if(!(input.length<3)){var inputLines=input.split(/\n/).map((function(line){return line.trim()})),thisInputJson={};thisInputJson[(inputLines=inputLines.slice(1,inputLines.length-1))[0]]=inputLines.slice(1),thisTestCaseJson.inputs.push(thisInputJson)}})),jsonReturn.push(thisTestCaseJson)})),jsonReturn}catch(e){throw new Error("Error parsing tests file: "+e)}};_exports.parseTestsFile=parseTestsFile;_exports.runTests=function(contents){var tests=parseTestsFile(contents);console.log(tests)}}));

//# sourceMappingURL=lib.min.js.map