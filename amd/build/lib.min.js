/**
 *
 * @module      mod_nextblocks/lib
 * @copyright   2023 Duarte Pereira<dg.pereira@campus.fct.unl.pt>
 * @license     https://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later
 */
define("mod_nextblocks/lib",["mod_nextblocks/codestring"],(function(CodeString){function generateFunctionCode(block){Blockly.JavaScript.blockToCode(block);var functionName="%"+javascript.javascriptGenerator.nameDB_.getName(block.getFieldValue("NAME"),Blockly.Procedures.NAME_TYPE);return functionName=functionName.substring(0,functionName.length-1),javascript.javascriptGenerator.definitions_[functionName]+"\n"}function generateDescendantsCode(block){var descendantsCode="";return block.getChildren(!0).forEach((function(child){descendantsCode+=Blockly.JavaScript.blockToCode(child)})),descendantsCode}function extractFunctionNames(input){for(var match,regex=/function\s+(\w+)\s*\(/g,functionNames=[];null!==(match=regex.exec(input));)functionNames.push(match[1]);return functionNames}var formatCodeHTML=function(code){var debugMode=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];return debugMode?"<pre>"+code.getCompleteCodeString()+"</pre>":"<pre>"+code.getPrintableCodeString()+"</pre>"};return{silentRunCode:function silentRunCode(code){return eval(code)},replaceCode:function(code){document.getElementById("codeDiv").innerHTML=formatCodeHTML(code)},testsAccordion:function(results,testsJSON,uncalledInputFuncs){var testCaseCount=testsJSON.length,accordion='<div style="max-height: 100%; overflow-y: auto;">';null===results&&(accordion+='<div class="alert alert-warning" role="alert">',accordion+="Not all input functions were called. No tests will be executed.",accordion+="<br>Input functions not called: "+uncalledInputFuncs.join(", "),accordion+="</div>");for(var i=0;i<testCaseCount;i++)accordion+='<details class="card">',accordion+='<summary class="card-header">',accordion+="Test "+(i+1),null===results||void 0===results[i]?accordion+='<span class="badge badge-warning float-right">Not run</span>':results[i]===testsJSON[i].output?accordion+='<span class="badge badge-success float-right">Passed</span>':accordion+='<span class="badge badge-danger float-right">Failed</span>',accordion+="</summary>",accordion+='<div class="card-body pt-0 pb-0 pl-2 pr-2">',testsJSON[i].inputs.forEach((function(input){for(var key in input)accordion+='<p class="pt-2 m-0">'+key+": </p>",accordion+='<pre class="mt-1 mb-0 test-input">'+Object.values(input[key])[0][0]+"</pre>"})),accordion+='<p class="pt-2 border-top mt-2 mb-0">Test output: </p>',accordion+='<pre class="mt-1 mb-0 mr-0 ml-0 test-output">'+testsJSON[i].output+"</pre>",accordion+='<div class="p-0">',accordion+='<p class="pt-2 m-0">Your output: </p>',accordion+=null===results?'<pre class="mt-1 mb-0 mr-0 ml-0 test-output">Not run</pre>':'<pre class="pb-2 mt-1 mb-0 ml-0 mr-0 test-output">'+results[i]+"</pre>",accordion+="</div>",accordion+="</details>";return accordion+="</div>"},runTests:function(code,tests){var _this=this,results=[];return tests.forEach((function(test){var thisTestCode=code;test.inputs.forEach((function(input){var prompt=Object.keys(input)[0],values=Object.values(input[prompt])[0],inputIndex=thisTestCode.lastIndexOf(prompt),inputParentheses1=thisTestCode.indexOf("(",inputIndex),inputParentheses2=thisTestCode.indexOf(")",inputParentheses1+1),preStr=thisTestCode.substring(0,inputParentheses1+1),postStr=thisTestCode.substring(inputParentheses2);thisTestCode=preStr+values[0]+postStr}));var codeOutput=_this.silentRunCode(thisTestCode);codeOutput=codeOutput.replace(/\s/g,""),results.push(codeOutput)})),results},getMissingInputCalls:function(code,inputFuncDecs){var functionDecNames=extractFunctionNames(inputFuncDecs),matches=code.match(/((?!\/\/ ).{3}|^.{0,2})\binput\w+\s*\([^)]*\)(?=\s*;|\s*\)|\s*[,)])/g);if(null===matches)return functionDecNames;var functionCallNames=matches.map((function(match){return match.match(/\b(\w+)(?=\s*\()/g)})).flat();return functionDecNames.filter((function(name){return!functionCallNames.includes(name)}))},getWorkspaceCode:function(workspace,inputFuncDecs){javascript.javascriptGenerator.addReservedWords("print, input");var codeString=new CodeString;codeString.addAuxFunctions(inputFuncDecs),codeString.addVariable("outputString",'""');codeString.addLine("(function () {");for(var blocks=workspace.getTopBlocks(!0),b=0;b<blocks.length;b++){var block=blocks[b];"start"===block.type&&codeString.addMainCode(generateDescendantsCode(block)),"procedures_defnoreturn"!==block.type&&"procedures_defreturn"!==block.type||codeString.addFunction(generateFunctionCode(block))}return codeString.addEnding(),codeString}}}));

//# sourceMappingURL=lib.min.js.map