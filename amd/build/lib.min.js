define("mod_nextblocks/lib",["exports"],(function(_exports){Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.runTests=_exports.replaceCode=_exports.parseTestsFile=_exports.injectInputBox=_exports.getWorkspaceCode=void 0;
/**
   *
   * @module      mod_nextblocks/env
   * @copyright   2023 Duarte Pereira<dg.pereira@campus.fct.unl.pt>
   * @license     https://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later
   */
var injectInputBox=function(i){var inputBox=document.createElement("input");inputBox.setAttribute("type","text"),inputBox.setAttribute("id","programInputBox"+i);var submitButton=document.createElement("button");submitButton.setAttribute("id","programInputButton"+i),submitButton.setAttribute("type","button"),submitButton.innerHTML="Submit",document.getElementById("blocklyDiv").insertAdjacentElement("afterend",inputBox),inputBox.insertAdjacentElement("afterend",submitButton)};_exports.injectInputBox=injectInputBox;var replaceCode=function(code){document.getElementById("codeDiv").innerHTML=formatCodeHTML(code)};_exports.replaceCode=replaceCode;var formatCodeHTML=function(code){return"<pre>"+code+"</pre>"},parseTestsFile=function(fileString){try{var jsonReturn=[];return fileString.split("|").forEach((function(testCase){var thisTestCaseJson={inputs:[]},inputOutput=testCase.split("-"),inputs=inputOutput[0];thisTestCaseJson.output=inputOutput[1].trim(),inputs.split("_").forEach((function(input){if(!(input.length<3)){var inputLines=input.split(/\n/).map((function(line){return line.trim()})),thisInputJson={};thisInputJson[(inputLines=inputLines.slice(1,inputLines.length-1))[0]]=inputLines.slice(1),thisTestCaseJson.inputs.push(thisInputJson)}})),jsonReturn.push(thisTestCaseJson)})),jsonReturn}catch(e){throw new Error("Error parsing tests file: "+e)}};_exports.parseTestsFile=parseTestsFile;var runTests=function runTests(workspace,tests){var code=getWorkspaceCode(workspace),results=[];return tests.forEach((function(test){var thisTestCode=code,inputs=test.inputs;inputs.forEach((function(input){var prompt=Object.keys(input)[0],values=input[prompt],inputIndex=thisTestCode.indexOf(prompt),inputQuote1=thisTestCode.indexOf('"',inputIndex),inputQuote2=thisTestCode.indexOf('"',inputQuote1+1),preStr=thisTestCode.substring(0,inputQuote1+1),postStr=thisTestCode.substring(inputQuote2);thisTestCode=preStr+values[0]+postStr}));var testOutput=test.output,codeOutput=eval(thisTestCode);console.log("Test output: "+testOutput),console.log("Code output: "+codeOutput),results.push(testOutput===codeOutput)})),results};_exports.runTests=runTests;var getWorkspaceCode=function(workspace){var code=javascript.javascriptGenerator.workspaceToCode(workspace);return code="(function () {\n    let outputString = ``;\n"+code+"return outputString;\n})();\n"};_exports.getWorkspaceCode=getWorkspaceCode}));

//# sourceMappingURL=lib.min.js.map