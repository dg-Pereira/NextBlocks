define("mod_nextblocks/lib",["exports"],(function(_exports){Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.testsAccordion=_exports.runTests=_exports.replaceCode=_exports.injectInputBox=_exports.getWorkspaceCode=void 0;
/**
   *
   * @module      mod_nextblocks/env
   * @copyright   2023 Duarte Pereira<dg.pereira@campus.fct.unl.pt>
   * @license     https://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later
   */
var injectInputBox=function(i){var inputBox=document.createElement("input");inputBox.setAttribute("type","text"),inputBox.setAttribute("id","programInputBox"+i);var submitButton=document.createElement("button");submitButton.setAttribute("id","programInputButton"+i),submitButton.setAttribute("type","button"),submitButton.innerHTML="Submit",document.getElementById("blocklyDiv").insertAdjacentElement("afterend",inputBox),inputBox.insertAdjacentElement("afterend",submitButton)};_exports.injectInputBox=injectInputBox;var replaceCode=function(code){document.getElementById("codeDiv").innerHTML=formatCodeHTML(code)};_exports.replaceCode=replaceCode;var formatCodeHTML=function(code){return"<pre>"+(code=removeWrapperFunction(code))+"</pre>"},removeWrapperFunction=function(code){var lines=code.split("\n");return lines.splice(0,2),lines.splice(-3),lines.join("\n")},runTests=function runTests(workspace,tests){var code=getWorkspaceCode(workspace),results=[];return tests.forEach((function(test){var thisTestCode=code,inputs=test.inputs;inputs.forEach((function(input){var prompt=Object.keys(input)[0],values=input[prompt],inputIndex=thisTestCode.indexOf(prompt),inputQuote1=thisTestCode.indexOf('"',inputIndex),inputQuote2=thisTestCode.indexOf('"',inputQuote1+1),preStr=thisTestCode.substring(0,inputQuote1+1),postStr=thisTestCode.substring(inputQuote2);thisTestCode=preStr+values[0]+postStr}));var codeOutput=eval(thisTestCode);results.push(codeOutput)})),results};_exports.runTests=runTests;var getWorkspaceCode=function(workspace){var code=javascript.javascriptGenerator.workspaceToCode(workspace);return code="(function () {\n    let outputString = ``;\n"+code+"return outputString;\n})();\n"};_exports.getWorkspaceCode=getWorkspaceCode;var testsAccordion=function(results,testsJSON){for(var testCaseCount=testsJSON.length,accordion='<div style="max-height: 100%; overflow-y: auto;">',i=0;i<testCaseCount;i++)accordion+='<details class="card">',accordion+='<summary class="card-header">',accordion+="Test "+(i+1),results[i]===testsJSON[i].output?accordion+='<span class="badge badge-success float-right">Passed</span>':accordion+='<span class="badge badge-danger float-right">Failed</span>',accordion+="</summary>",accordion+='<div class="card-body pt-0 pb-0 pl-2 pr-2">',testsJSON[i].inputs.forEach((function(input){for(var key in input)accordion+='<p class="pt-2 m-0">'+key+": </p>",accordion+='<pre class="mt-1 mb-0 test-input">'+input[key][0]+"</pre>"})),accordion+='<p class="pt-2 border-top mt-2 mb-0">Test output: </p>',accordion+='<pre class="mt-1 mb-0 mr-0 ml-0 test-output">'+testsJSON[i].output+"</pre>",accordion+='<div class="p-0">',accordion+='<p class="pt-2 m-0">Your output: </p>',accordion+='<pre class="pb-2 mt-1 mb-0 ml-0 mr-0 test-output">'+results[i]+"</pre>",accordion+="</div>",accordion+="</details>";return accordion+="</div>"};_exports.testsAccordion=testsAccordion}));

//# sourceMappingURL=lib.min.js.map